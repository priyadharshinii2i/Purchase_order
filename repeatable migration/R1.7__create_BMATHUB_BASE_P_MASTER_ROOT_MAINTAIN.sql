USE SCHEMA BOM;

CREATE
	OR REPLACE PROCEDURE P_MASTER_ROOT_MAINTAIN ()
RETURNS VARCHAR(16777216) LANGUAGE SQL AS 
	'
BEGIN

    TRUNCATE TABLE BMATHUB_BASE.T_ITEM_DETAIL_ROOT ;
    TRUNCATE TABLE BMATHUB_BASE.T_LOCATION_ROOT;
    TRUNCATE TABLE BMATHUB_BASE.T_ORIG_BOM_ROOT;

    MERGE INTO BMATHUB_BASE.T_ITEM_DETAIL_ROOT target
USING MASTER_DATA.ITEM source
ON target.ITEM_ID = source.ITEM_ID
WHEN MATCHED THEN 
    UPDATE SET target.ITEM_ID = source.ITEM_ID,
    target.ITEM_CLASS_NM = source.ITEM_CLASS_NM,
    target.ITEM_DSC = source.ITEM_DSC,
    target.DELETE_IND = source.DELETE_IND
WHEN NOT MATCHED THEN 
    INSERT (ITEM_ID, ITEM_CLASS_NM, ITEM_DSC, DELETE_IND) values (source.ITEM_ID, source.ITEM_CLASS_NM, source.ITEM_DSC, source.DELETE_IND);

-----MERGE CONDITION FOR BOM LOCATION-----

MERGE INTO BMATHUB_BASE.T_LOCATION_ROOT target
USING MASTER_DATA.LOCATION source
ON target.ITEM_ID = source.ITEM_ID
WHEN MATCHED THEN 
    UPDATE SET target.ITEM_ID = source.ITEM_ID,
    target.ITEM_CLASS_NM = source.ITEM_CLASS_NM,
    target.LOCATION_ID = source.LOCATION_ID
WHEN NOT MATCHED THEN 
    INSERT (ITEM_ID, ITEM_CLASS_NM, LOCATION_ID) values (source.ITEM_ID, source.ITEM_CLASS_NM, source.LOCATION_ID);
    
-----MERGE CONDITION FOR BOM ORI-----

MERGE INTO BMATHUB_BASE.T_ORIG_BOM_ROOT target
USING MASTER_DATA.ORIG_BOM source
ON target.ITEM_ID = source.ITEM_ID
WHEN MATCHED THEN 
    UPDATE SET target.ITEM_ID = source.ITEM_ID,
    target.ITEM_CLASS_NM = source.ITEM_CLASS_NM,
    target.OUTPUT_ITEM_ID = source.OUTPUT_ITEM_ID,
    target.LOCATION = source.LOCATION
WHEN NOT MATCHED THEN 
    INSERT (ITEM_ID, ITEM_CLASS_NM, OUTPUT_ITEM_ID, LOCATION) values (source.ITEM_ID, source.ITEM_CLASS_NM, source.OUTPUT_ITEM_ID, source.LOCATION);
    RETURN ''completed'';
END;
'
	;